
    .z80 

DISK_Load:  ; load 1 sector each time this is called 
    ld      a,#0x02         ; cmd 02 - setup read data 
    call    DISK_SdCmd
    ld      a,b             ; sector num.
    cp      #17 
    jr      c,._load2       ; if sector ct > 17, skip 
    ld      a,#17           ; else a = 17 - startSector
    sub     e 
._load2: 
    call    DISK_SdData1    ; sector count
    ld      a,c             ; drive no
    call    DISK_SdData1 
    ld      a,d             ; start track 
    call    DISK_SdData1 
    ld      a,e             ; start sector 
    call    DISK_SdData1 
    ld      a,#0x12         ; Cmd 18 - fast send data
    call    DISK_SdCmd
._loop1: 
    push    bc 
    ld      b,#128 
._loop2: 
    call    DISK_RdData2 
    djnz    ._loop2 
    inc     e 
    ld      a,e             ; increase the tgt sector
    cp      #17             ; if 17,
    jr      z,._next        ; next track
    pop     bc 
    djnz    ._loop1 
    ret 
._next: 
    inc     d               ; increment track
    ld      e,#1            ; reset tgt sector to 1
    pop     bc 
    dec     b               ; decrement sector counter 
    jr      nz,DISK_Load 
    ret 

DISK_SdCmd:
    push    af 
    ld      a,#0b00001111   ; attention=1
    out     (0xFF),a 
._wait1: 
    in      a,(0xFE) 
    bit     1,a 
    jr      z,._wait1 
    ld      a,#0b00001110   ; attn = 0
    out     (0xFF),a 
    jr      DISK_SdData1sub
DISK_SdData1: 
    push    af 
.__wait1: 
    in      a,(0xFE) 
    bit     1,a 
    jr      z,.__wait1 
DISK_SdData1sub:
    pop     af 
    out     (0xFD),a 
    ld      a,#0b00001001   ; data valid 
    out     (0xFF),a 
.wait2: 
    in      a,(0xFE)
    bit     2,a 
    jr      z,.wait2 
    ld      a,#0b00001000   ; data valid 
    out     (0xFF),a 
.wait3: 
    in      a,(0xFE) 
    bit     2,a             
    jr      nz,.wait3 
    ret 
DISK_RdData2: 
    ld      a,#0b00001011   ; ready 
    out     (0xFF),a 
.___wait1: 
    in      a,(0xFE) 
    rrca 
    jr      nc,.___wait1 
    ld      a,#0b00001010   ;rdy for data=0
    out     (0xFF),a 
    in      a,(0xFC) 
    ld      (hl),a 
    inc     hl 
    ld      a,#0b00001101   ; data valid=1
    out     (0xFF),a 
.__wait2: 
    in      a,(0xFE) 
    rrca 
    jr      c,.__wait2 
    in      a,(0xFC) 
    ld      (hl),a 
    inc     hl 
    ld      a,#0b00001100   ;data accpt 
    out     (0xFF),a 
    ret 