#include <pc88-c.h>

inline void SetIRQs()
{
    SetIOReg(IRQ_LEVEL_SET, 2);
    SetIOReg(IRQ_MASK, 2);
}

extern bool playingSong;
extern struct Song currentSong;
extern signed int ticker;

u8 ctr;

const u8 instrumentdat[] = {
    0x33, 0x01, 0x01, 0x01 ,
    0x25, 0x1c, 0x22, 0x08 ,
    0x10, 0x1a, 0x13, 0x1b ,
    0x8f, 0x9f, 0x9f, 0x9f ,
    0x00, 0x00, 0x00, 0x00 ,
    0x33, 0x03, 0x03, 0x04, 
    0x38
};

const u8 datas[]={
            0x32, 0x32, 0x71,  0x72, 0x16, 0x00, 0x15,  0x00, 0x5F, 0x52, 0x5F,
             0x52, 0x0C, 0x08, 0x0C,  0x08, 0x00, 0x00, 0x00,  0x00, 0x16, 0x16, 0x26, 0x16,
             0x2c};

Instrument* ins;

u8 tmp;
u8 i;


void main()
{
    IRQ_OFF; 
    __asm 
        ld hl, #_Vblank
        ld (CRTC_IRQ),hl
    __endasm;
    SetIRQs();        // And enable the VBL interrupt!
    
    SetCursorPos(0, 1);
    print("Testing FM ");

    ins = (Instrument*)&instrumentdat;

    u8 chn = 0;
    SetFMInstrument(chn, ins);

    FMNoteOn(chn, (3 << 11) + 0x26a);
     for(u16 wait = 0; wait < 0x7fff; wait++){;}
    FMNoteOff(chn);

    IRQ_ON 
    while(1)
    { }
}

void Vblank() __critical __interrupt
{
    IRQ_OFF; 


    SetIRQs(); 
    IRQ_ON;
}
